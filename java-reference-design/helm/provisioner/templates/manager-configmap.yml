---
apiVersion: v1
kind: ConfigMap
metadata:
  name: manager-application-properties
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "provisioner.name" . }}
    chart: {{ include "provisioner.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
    {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
    snappyflow/component: manager
data:
  application.properties: |
    # Application Port : 
    server.port = 8080
    
    # Spring Datasource (MySQL) :
    #spring.datasource.url = jdbc:mysql://{{ include "provisioner.fullname" . }}-mysql-service/provisioner?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&createDatabaseIfNotExist=true
    spring.datasource.url = jdbc:mysql://{{ template "mysql.fullname" . }}/provisioner?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&createDatabaseIfNotExist=true
    spring.datasource.username = root
    spring.datasource.password = root
    
    # Hibernate Properties : 
    spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
    
    # Show SQL Query : 
    spring.jpa.show-sql = true
    
    # Hibernate ddl auto (create, create-drop, validate, update) : 
    spring.jpa.generate-ddl=true
    spring.jpa.hibernate.ddl-auto = update
    
    # Kafka Constants : 
    kafka.group-id = kafka-group
    kafka.topic-name-producer = task-topic
    kafka.topic-name-consumer = notification-topic
    kafka.bootstrap-server = {{ include "kafka.fullname" . }}-headless:9092
    kafka.auto-offset-reset = earliest
    
    
    # Worker URIs : 
    worker.get.uri.path = /get-counter
    worker.reset.uri.path = /reset-counter
    worker.server.ip = {{ include "provisioner.fullname" . }}-worker-service:8083
    