---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "provisioner.fullname" . }}-kafka
  labels:
    snappyflow/appname: {{ .Values.global.sfappname }}
    snappyflow/projectname: {{ .Values.global.sfprojectname }}
    snappyflow/component: kafka
spec:
  replicas: {{ .Values.kafka.replicaCount }}
  selector:
    matchLabels:
        app: kafka
        id: "0"
  template:
    metadata:
      labels:
        app: kafka
        id: "0"
        snappyflow/appname: {{ .Values.global.sfappname }}
        snappyflow/projectname: {{ .Values.global.sfprojectname }}
        snappyflow/component: kafka
    spec:
      containers:
      - name: kafka
        image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
        imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
        ports:
        - containerPort: 9092
          name: plaintext
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: {{ include "provisioner.fullname" . }}-kafka-service
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://:9092"
        - name: KAFKA_BROKER_ID
          value: "0"
        - name: KAFKA_CREATE_TOPICS
          value: task-topic:1:1,notification-topic:1:1